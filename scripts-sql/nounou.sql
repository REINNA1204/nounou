-- PostgreSQL

-- Schema 

DROP SCHEMA  IF EXISTS  nounou  CASCADE;
CREATE SCHEMA  nounou;

SET search_path TO nounou, public;


-- Tables et vues // 4 tables, Contrat, Parent, nounou, Suivi

CREATE TABLE compte (
	IdCompte		INT			 	NOT NULL	GENERATED BY DEFAULT AS IDENTITY,
	Pseudo			VARCHAR(25)		NOT NULL,
	MotDePasse		VARCHAR(25) 	NOT NULL,
	Email			VARCHAR(100)	NOT NULL,
	PRIMARY KEY (IdCompte)
);

CREATE TABLE role (
	IdCompte		INT				NOT NULL,
	Role			VARCHAR(20)		NOT NULL,
	CHECK( Role IN ('ADMINISTRATEUR','UTILISATEUR') ),	
	PRIMARY KEY (IdCompte, Role)
);

CREATE TABLE agrement (
	IdAgrement	INT				NOT NULL	GENERATED BY DEFAULT AS IDENTITY,
	Libelle			VARCHAR(25)		NOT NULL,
	NombreMaxEnfant		INT				NOT NULL,
	PRIMARY KEY (IdAgrement)
);

CREATE TABLE personnel (
	IdPersonnel		INT				NOT NULL	GENERATED BY DEFAULT AS IDENTITY,
	IdAgrement		INT				NOT NULL,
	IdCompte		INT				NOT NULL,
	Nom				VARCHAR(25)  	NOT NULL,
	Prenom			VARCHAR(25) 	NOT NULL,
	Telephone		VARCHAR(50)		NOT NULL,
	Adresse		VARCHAR(50)		NOT NULL,
	FOREIGN KEY (IdAgrement) REFERENCES agrement (IdAgrement),
	FOREIGN KEY (IdCompte) REFERENCES compte (IdCompte),
	PRIMARY KEY (IdPersonnel)
);

CREATE TABLE parent (
	IdParent				INT				NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	IdCompte		INT				NOT NULL,
	Nom				VARCHAR(50)		NOT NULL,
	Prenom			VARCHAR(50)		NOT NULL,
	Telephone		VARCHAR(50)		NOT NULL,
	Adresse		VARCHAR(50)		NOT NULL,
	FOREIGN KEY (IdCompte) REFERENCES compte (IdCompte),
	PRIMARY KEY (IdParent)
);

CREATE TABLE contrat (
	IdContrat				INT				NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	NomEnfant				VARCHAR(50)		NOT NULL,
	PrenomEnfant			VARCHAR(50)		NOT NULL,
	DateNaissanceEnfant			DATE		NOT NULL,
	DateDebut			DATE		NOT NULL,
	DateFin			DATE		NOT NULL,
	TarifHoraire			DOUBLE PRECISION		NOT NULL,
	IdParent		INT				NOT NULL,
	IdPersonnel		INT				NOT NULL,
	FOREIGN KEY (IdParent) REFERENCES parent (IdParent),
	FOREIGN KEY (IdPersonnel) REFERENCES personnel (IdPersonnel),
	PRIMARY KEY (IdContrat)
);

CREATE TABLE suivi (
	IdSuivi				INT				NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	DateDuJour			DATE		NOT NULL,
	HeureArrivee			TIME		NOT NULL,
	HeureDepart			TIME		NOT NULL,
	IsRepas			BOOLEAN			NOT NULL,
	MontantJour				DOUBLE PRECISION				NOT NULL,
	IdContrat		INT				NOT NULL,
	FOREIGN KEY (IdContrat) REFERENCES contrat (IdContrat),
	PRIMARY KEY (IdSuivi)
);



-- Insertion des donn√©es

--Table "compte"
INSERT INTO compte (IdCompte, Pseudo, MotDePasse, Email ) VALUES 
  (1, 'ajulie', 'ajulie', 'ajulie@nounou.fr' );
INSERT INTO compte (IdCompte, Pseudo, MotDePasse, Email ) VALUES 
  (2, 'nmarie', 'nmarie', 'nmarie@gmail.com' );

ALTER TABLE compte ALTER COLUMN IdCompte RESTART WITH 3;

--Table "role"
INSERT INTO role (IdCompte, Role) VALUES 
  ( 1, 'ADMINISTRATEUR' );
INSERT INTO role (IdCompte, Role) VALUES 
  ( 1, 'UTILISATEUR' );
INSERT INTO role (IdCompte, Role) VALUES 
  ( 2, 'UTILISATEUR' );

--Table "agrement"
INSERT INTO agrement (IdAgrement, Libelle, NombreMaxEnfant ) VALUES 
  (1, 'CTA-1', 6 );

ALTER TABLE agrement ALTER COLUMN IdAgrement RESTART WITH 2;

--Table "personnel"
INSERT INTO personnel (IdPersonnel,	IdAgrement, IdCompte, Nom, Prenom, Telephone, Adresse) VALUES
( 1, 1, 1, 'Abessolo', 'Julie', '+33612435678', 'Avenue Georges Pompidou 87000 Limoges');

ALTER TABLE personnel ALTER COLUMN IdPersonnel RESTART WITH 2;
	
--Table "parent"
INSERT INTO parent (IdParent, IdCompte, Nom, Prenom, Telephone, Adresse) VALUES
( 1, 2, 'Ngono', 'Marie', '+33698076574', 'Avenue du Chanvre 95300 Pontoise');

ALTER TABLE parent ALTER COLUMN IdParent RESTART WITH 2;


	
-- Compte utilisateur

DROP USER  IF EXISTS  nounou;
CREATE USER  nounou  WITH PASSWORD 'nounou';
GRANT ALL PRIVILEGES ON SCHEMA nounou TO nounou;
GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA nounou TO nounou;


